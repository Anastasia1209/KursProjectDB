-----TABLES
alter session set container = CDB$ROOT;
select * from v$database;
alter session set container = PDB_KURSACH;

Alter user gol_pdb_A quota unlimited on users;

select * from dba_users;

grant connect, create session, alter session, create any table, drop any table, 
create any view, drop any view, create any procedure, drop any procedure,
CREATE TRIGGER, ALTER ANY TRIGGER, DROP ANY TRIGGER, DEBUG CONNECT SESSION, SELECT ANY DICTIONARY to gol_pdb_A;

grant create any sequence to gol_pdb_A;

select * from EMPLOYEES;
select * from CLIENTS;
select * from SERVICES;
select * from REGISTRATION;
select * from REVIEWS;

--1
create table CLIENTS (
clientID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name NVARCHAR2(50) NOT NULL,
surname NVARCHAR2(50) NOT NULL,
phone NVARCHAR2(20) NOT NULL,
email NVARCHAR2(100) UNIQUE NOT NULL,
password NVARCHAR2(50) UNIQUE NOT NULL,
CONSTRAINT PK_Clients PRIMARY KEY (clientID)
);


--2
create table EMPLOYEES (
employeeID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name NVARCHAR2(50) NOT NULL,
surname NVARCHAR2(50) NOT NULL,
positions NVARCHAR2(50) NOT NULL,
serviceID number not null,
phone NVARCHAR2(20) NOT NULL,
email NVARCHAR2(100) UNIQUE NOT NULL,
CONSTRAINT PK_Employees PRIMARY KEY (employeeID)
);

--3
create table SERVICES (
serviceID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
name NVARCHAR2(100) unique NOT NULL,
description NVARCHAR2(255),    
price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
CONSTRAINT PK_Services PRIMARY KEY (serviceID)
);

--4
CREATE TABLE REVIEWS (
reviewID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,    
employeeID NUMBER NOT NULL,    
rating NUMBER CHECK (rating >= 1 AND rating <= 5),    
comm NVARCHAR2(255),    
CONSTRAINT PK_Reviews PRIMARY KEY (reviewID)
);

--5
CREATE TABLE REGISTRATION (    
registrationID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,    
clientID NUMBER NOT NULL,    
employeeID NUMBER NOT NULL,
dateTime TIMESTAMP NOT NULL,    
notes NVARCHAR2(255),    
CONSTRAINT PK_Registration PRIMARY KEY (registrationID)
);

-----------------------------------------------------
ALTER TABLE REVIEWS ADD CONSTRAINT FK_Reviews_Employee FOREIGN KEY (employeeID) REFERENCES EMPLOYEES(employeeID) ON DELETE CASCADE;
-----------------------------------------------------
ALTER TABLE REGISTRATION ADD CONSTRAINT FK_Registration_Client FOREIGN KEY (clientID) REFERENCES CLIENTS(clientID) ON DELETE CASCADE;
ALTER TABLE REGISTRATION ADD CONSTRAINT FK_Registration_Employee FOREIGN KEY (employeeID) REFERENCES EMPLOYEES(employeeID) ON DELETE CASCADE;

-----------------------------------------------------
ALTER TABLE EMPLOYEES add constraint FK_Employee_Service foreign key (serviceID) references SERVICES(serviceID) on delete cascade;

-----------------------------------------------
-----------------------------------------------
ALTER TABLE REGISTRATION DROP CONSTRAINT FK_Registration_Client;
ALTER TABLE REGISTRATION DROP CONSTRAINT FK_Registration_Employee;
-----------------------------------------------
ALTER TABLE REVIEWS DROP CONSTRAINT FK_Reviews_Employee;
-----------------------------------------------
alter table EMPLOYEES drop constraint FK_Employee_Service;
-- Удаление связанных записей в таблице Registrations
truncate table REGISTRATION;
truncate table SERVICES;
truncate table  EMPLOYEES;
truncate table CLIENTS;
truncate table REVIEWS;

------------------------------------------------
drop table CLIENTS;
drop table EMPLOYEES;
drop table SERVICES;
drop table REVIEWS;
drop table REGISTRATION;
